// Event loop / цикл подій
// У JavaScript цикл подій (event loop) є основним механізмом для керування асинхронним кодом. Він дозволяє виконувати не блокуючі операції, такі як введення-виведення, таймери та мережеві запити, без блокування основного потоку виконання. Цикл подій працює в середовищах, таких як браузери та Node.js.

// javascript engine - виконати цей код, і трансоформувати його в машиний код.
// Call stack - механізм виконання функцій, описаних у вашому коді, у правильному порядку. 
// Це структура, куди додаються всі функції під час їх виклику. 
// Це місце, де функції виконуються до їх завершення.

// Якщо функція використовує Web APIs (наприклад, setTimeout, HTTP-запити), її асинхронна частина виконується поза межами основного стеку викликів.
// Після завершення асинхронної операції, відповідний колбек (callback) додається до черги зворотніх викликів (callback queue).
// Коли стек викликів стає порожнім, цикл подій бере колбек з черги зворотніх викликів і додає його до стеку викликів для виконання.

//Після завершення всіх синхронних операцій цикл подій перевіряє чергу мікрозадач і виконує колбек з промісу.
// Лише після завершення мікрозадач цикл подій переходить до черги задач і виконує колбек з таймера.


function one() {
    console.log(1)
}
function two() {
    one()
    console.log(2)
}
function three() {
    two()
    console.log(3)
}
function four() {
    three()
    console.log(4)
}

four();
